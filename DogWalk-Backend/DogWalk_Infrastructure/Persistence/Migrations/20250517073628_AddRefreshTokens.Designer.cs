// <auto-generated />
using System;
using DogWalk_Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DogWalk_Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(DogWalkDbContext))]
    [Migration("20250517073628_AddRefreshTokens")]
    partial class AddRefreshTokens
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DogWalk_Domain.Entities.Articulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Articulos", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.ChatMensaje", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LeidoPorPaseador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("LeidoPorUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PaseadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PaseadorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ChatMensajes", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.DetalleFactura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FacturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("FacturaId");

                    b.ToTable("DetallesFactura", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.DisponibilidadHoraria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PaseadorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PaseadorId");

                    b.ToTable("DisponibilidadHoraria", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Factura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Facturas", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.FotoPerro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PerroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UrlFoto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PerroId");

                    b.ToTable("FotosPerros", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.ImagenArticulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EsPrincipal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.ToTable("ImagenesArticulos", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.ItemCarrito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ItemsCarrito", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.OpinionPerro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PaseadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PerroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PerroId");

                    b.HasIndex("PaseadorId", "PerroId")
                        .IsUnique();

                    b.ToTable("OpinionesPerros", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Paseador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValoracionGeneral")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)")
                        .HasDefaultValue(0.00m);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Paseadores", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Perro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("GpsUbicacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Perros", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PaseadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PaseadorId");

                    b.HasIndex("ServicioId");

                    b.ToTable("Precios", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.RankingPaseador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PaseadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PaseadorId");

                    b.HasIndex("UsuarioId", "PaseadorId")
                        .IsUnique();

                    b.ToTable("RankingPaseadores", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DisponibilidadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PaseadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PerroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DisponibilidadId");

                    b.HasIndex("PaseadorId");

                    b.HasIndex("PerroId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoRol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f7779b5-e30e-4e38-bdf4-79c533696187"),
                            CreadoEn = new DateTime(2025, 5, 17, 7, 36, 27, 866, DateTimeKind.Utc).AddTicks(5544),
                            Nombre = "Administrador",
                            TipoRol = 1
                        },
                        new
                        {
                            Id = new Guid("c2fbf3a7-adfa-4ac4-b384-14874661c995"),
                            CreadoEn = new DateTime(2025, 5, 17, 7, 36, 27, 866, DateTimeKind.Utc).AddTicks(5548),
                            Nombre = "Usuario",
                            TipoRol = 2
                        },
                        new
                        {
                            Id = new Guid("95b2b3ff-f0c1-4819-a842-0d0b6e111c0d"),
                            CreadoEn = new DateTime(2025, 5, 17, 7, 36, 27, 866, DateTimeKind.Utc).AddTicks(5550),
                            Nombre = "Paseador",
                            TipoRol = 3
                        });
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Servicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servicios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("dbc1c3f6-6230-46c9-a344-7d5d647738be"),
                            CreadoEn = new DateTime(2025, 5, 17, 7, 36, 27, 866, DateTimeKind.Utc).AddTicks(5702),
                            Descripcion = "Paseo de 30 minutos con un paseador profesional",
                            Nombre = "Paseo estándar",
                            Tipo = "Paseo"
                        },
                        new
                        {
                            Id = new Guid("7a5d6a55-43d0-4825-b5c0-7ce22ebd142c"),
                            CreadoEn = new DateTime(2025, 5, 17, 7, 36, 27, 866, DateTimeKind.Utc).AddTicks(5707),
                            Descripcion = "Paseo de 60 minutos con un paseador profesional",
                            Nombre = "Paseo premium",
                            Tipo = "Paseo"
                        },
                        new
                        {
                            Id = new Guid("e0da5de2-b1e3-4c4d-b03d-b35c7f12c5d7"),
                            CreadoEn = new DateTime(2025, 5, 17, 7, 36, 27, 866, DateTimeKind.Utc).AddTicks(5710),
                            Descripcion = "Cuidado durante el día en casa del paseador (8 horas)",
                            Nombre = "Guardería diurna",
                            Tipo = "GuarderiaDia"
                        },
                        new
                        {
                            Id = new Guid("d21b1406-2dce-4cd9-9b0f-e1c366ac6c4c"),
                            CreadoEn = new DateTime(2025, 5, 17, 7, 36, 27, 866, DateTimeKind.Utc).AddTicks(5712),
                            Descripcion = "Cuidado durante la noche en casa del paseador (12 horas)",
                            Nombre = "Guardería nocturna",
                            Tipo = "GuarderiaNoche"
                        });
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Articulo", b =>
                {
                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Dinero", "Precio", b1 =>
                        {
                            b1.Property<Guid>("ArticuloId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Cantidad")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("Precio");

                            b1.Property<string>("Moneda")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasDefaultValue("EUR")
                                .HasColumnName("Moneda");

                            b1.HasKey("ArticuloId");

                            b1.ToTable("Articulos");

                            b1.WithOwner()
                                .HasForeignKey("ArticuloId");
                        });

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.ChatMensaje", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("MensajesRecibidos")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("MensajesEnviados")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Paseador");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.DetalleFactura", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DetalleFactura_Articulo");

                    b.HasOne("DogWalk_Domain.Entities.Factura", "Factura")
                        .WithMany("Detalles")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Dinero", "PrecioUnitario", b1 =>
                        {
                            b1.Property<Guid>("DetalleFacturaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Cantidad")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("PrecioUnitario");

                            b1.Property<string>("Moneda")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasDefaultValue("EUR")
                                .HasColumnName("Moneda");

                            b1.HasKey("DetalleFacturaId");

                            b1.ToTable("DetallesFactura");

                            b1.WithOwner()
                                .HasForeignKey("DetalleFacturaId");
                        });

                    b.Navigation("Articulo");

                    b.Navigation("Factura");

                    b.Navigation("PrecioUnitario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.DisponibilidadHoraria", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("Disponibilidad")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paseador");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Factura", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("Facturas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Dinero", "Total", b1 =>
                        {
                            b1.Property<Guid>("FacturaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Cantidad")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("Total");

                            b1.Property<string>("Moneda")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasDefaultValue("EUR")
                                .HasColumnName("Moneda");

                            b1.HasKey("FacturaId");

                            b1.ToTable("Facturas");

                            b1.WithOwner()
                                .HasForeignKey("FacturaId");
                        });

                    b.Navigation("Total");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.FotoPerro", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Perro", "Perro")
                        .WithMany("Fotos")
                        .HasForeignKey("PerroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perro");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.ImagenArticulo", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Articulo", "Articulo")
                        .WithMany("Imagenes")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.ItemCarrito", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ItemCarrito_Articulo");

                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("Carrito")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Dinero", "PrecioUnitario", b1 =>
                        {
                            b1.Property<Guid>("ItemCarritoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Cantidad")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("PrecioUnitario");

                            b1.Property<string>("Moneda")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasDefaultValue("EUR")
                                .HasColumnName("Moneda");

                            b1.HasKey("ItemCarritoId");

                            b1.ToTable("ItemsCarrito");

                            b1.WithOwner()
                                .HasForeignKey("ItemCarritoId");
                        });

                    b.Navigation("Articulo");

                    b.Navigation("PrecioUnitario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.OpinionPerro", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("OpinionesDadas")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Perro", "Perro")
                        .WithMany("Opiniones")
                        .HasForeignKey("PerroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Valoracion", "Valoracion", b1 =>
                        {
                            b1.Property<Guid>("OpinionPerroId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Puntuacion")
                                .HasColumnType("int")
                                .HasColumnName("Valoracion");

                            b1.HasKey("OpinionPerroId");

                            b1.ToTable("OpinionesPerros");

                            b1.WithOwner()
                                .HasForeignKey("OpinionPerroId");
                        });

                    b.Navigation("Paseador");

                    b.Navigation("Perro");

                    b.Navigation("Valoracion");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Paseador", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Role", null)
                        .WithMany("Paseadores")
                        .HasForeignKey("RoleId");

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Coordenadas", "Ubicacion", b1 =>
                        {
                            b1.Property<Guid>("PaseadorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitud")
                                .HasColumnType("float")
                                .HasColumnName("Latitud");

                            b1.Property<double>("Longitud")
                                .HasColumnType("float")
                                .HasColumnName("Longitud");

                            b1.HasKey("PaseadorId");

                            b1.ToTable("Paseadores");

                            b1.WithOwner()
                                .HasForeignKey("PaseadorId");
                        });

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Direccion", "Direccion", b1 =>
                        {
                            b1.Property<Guid>("PaseadorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Calle")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Calle");

                            b1.Property<string>("Ciudad")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Ciudad");

                            b1.Property<string>("CodigoPostal")
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("CodigoPostal");

                            b1.Property<string>("TextoCompleto")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)")
                                .HasColumnName("Direccion");

                            b1.HasKey("PaseadorId");

                            b1.ToTable("Paseadores");

                            b1.WithOwner()
                                .HasForeignKey("PaseadorId");
                        });

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Dni", "Dni", b1 =>
                        {
                            b1.Property<Guid>("PaseadorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(9)
                                .HasColumnType("nvarchar(9)")
                                .HasColumnName("Dni");

                            b1.HasKey("PaseadorId");

                            b1.HasIndex("Valor")
                                .IsUnique()
                                .HasFilter("[Dni] IS NOT NULL");

                            b1.ToTable("Paseadores");

                            b1.WithOwner()
                                .HasForeignKey("PaseadorId");
                        });

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("PaseadorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Email");

                            b1.HasKey("PaseadorId");

                            b1.HasIndex("Valor")
                                .IsUnique()
                                .HasFilter("[Email] IS NOT NULL");

                            b1.ToTable("Paseadores");

                            b1.WithOwner()
                                .HasForeignKey("PaseadorId");
                        });

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<Guid>("PaseadorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Hash")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PasswordHash");

                            b1.Property<string>("Salt")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PasswordSalt");

                            b1.HasKey("PaseadorId");

                            b1.ToTable("Paseadores");

                            b1.WithOwner()
                                .HasForeignKey("PaseadorId");
                        });

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Telefono", "Telefono", b1 =>
                        {
                            b1.Property<Guid>("PaseadorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("HasTelefono")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValue(false);

                            b1.Property<string>("Numero")
                                .HasMaxLength(9)
                                .HasColumnType("nvarchar(9)")
                                .HasColumnName("Telefono");

                            b1.HasKey("PaseadorId");

                            b1.ToTable("Paseadores");

                            b1.WithOwner()
                                .HasForeignKey("PaseadorId");
                        });

                    b.Navigation("Direccion");

                    b.Navigation("Dni");

                    b.Navigation("Email");

                    b.Navigation("Password");

                    b.Navigation("Telefono");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Perro", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("Perros")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Precio", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("Precios")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Servicio", "Servicio")
                        .WithMany("Precios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Dinero", "Valor", b1 =>
                        {
                            b1.Property<Guid>("PrecioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Cantidad")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("Precio");

                            b1.Property<string>("Moneda")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasDefaultValue("EUR")
                                .HasColumnName("Moneda");

                            b1.HasKey("PrecioId");

                            b1.ToTable("Precios");

                            b1.WithOwner()
                                .HasForeignKey("PrecioId");
                        });

                    b.Navigation("Paseador");

                    b.Navigation("Servicio");

                    b.Navigation("Valor");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.RankingPaseador", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("ValoracionesRecibidas")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("ValoracionesDadas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Valoracion", "Valoracion", b1 =>
                        {
                            b1.Property<Guid>("RankingPaseadorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Puntuacion")
                                .HasColumnType("int")
                                .HasColumnName("Valoracion");

                            b1.HasKey("RankingPaseadorId");

                            b1.ToTable("RankingPaseadores");

                            b1.WithOwner()
                                .HasForeignKey("RankingPaseadorId");
                        });

                    b.Navigation("Paseador");

                    b.Navigation("Usuario");

                    b.Navigation("Valoracion");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Reserva", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.DisponibilidadHoraria", "Disponibilidad")
                        .WithMany()
                        .HasForeignKey("DisponibilidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("Reservas")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Perro", "Perro")
                        .WithMany("Reservas")
                        .HasForeignKey("PerroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Servicio", "Servicio")
                        .WithMany("Reservas")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Dinero", "Precio", b1 =>
                        {
                            b1.Property<Guid>("ReservaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Cantidad")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("Precio");

                            b1.Property<string>("Moneda")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasDefaultValue("EUR")
                                .HasColumnName("Moneda");

                            b1.HasKey("ReservaId");

                            b1.ToTable("Reservas");

                            b1.WithOwner()
                                .HasForeignKey("ReservaId");
                        });

                    b.Navigation("Disponibilidad");

                    b.Navigation("Paseador");

                    b.Navigation("Perro");

                    b.Navigation("Precio");

                    b.Navigation("Servicio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Usuario", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Role", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("RoleId");

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Direccion", "Direccion", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Calle")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Calle");

                            b1.Property<string>("Ciudad")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Ciudad");

                            b1.Property<string>("CodigoPostal")
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("CodigoPostal");

                            b1.Property<string>("TextoCompleto")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)")
                                .HasColumnName("Direccion");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Dni", "Dni", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(9)
                                .HasColumnType("nvarchar(9)")
                                .HasColumnName("Dni");

                            b1.HasKey("UsuarioId");

                            b1.HasIndex("Valor")
                                .IsUnique()
                                .HasFilter("[Dni] IS NOT NULL");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.HasIndex("Valor")
                                .IsUnique()
                                .HasFilter("[Email] IS NOT NULL");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Hash")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PasswordHash");

                            b1.Property<string>("Salt")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PasswordSalt");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("DogWalk_Domain.Common.ValueObjects.Telefono", "Telefono", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(9)
                                .HasColumnType("nvarchar(9)")
                                .HasColumnName("Telefono");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Direccion");

                    b.Navigation("Dni");

                    b.Navigation("Email");

                    b.Navigation("Password");

                    b.Navigation("Telefono");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Articulo", b =>
                {
                    b.Navigation("Imagenes");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Factura", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Paseador", b =>
                {
                    b.Navigation("Disponibilidad");

                    b.Navigation("MensajesRecibidos");

                    b.Navigation("OpinionesDadas");

                    b.Navigation("Precios");

                    b.Navigation("Reservas");

                    b.Navigation("ValoracionesRecibidas");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Perro", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("Opiniones");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Role", b =>
                {
                    b.Navigation("Paseadores");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Servicio", b =>
                {
                    b.Navigation("Precios");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Carrito");

                    b.Navigation("Facturas");

                    b.Navigation("MensajesEnviados");

                    b.Navigation("Perros");

                    b.Navigation("Reservas");

                    b.Navigation("ValoracionesDadas");
                });
#pragma warning restore 612, 618
        }
    }
}
